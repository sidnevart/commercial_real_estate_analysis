"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –±–µ–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
"""
# filepath: test_bot.py

import asyncio
import logging
import sys
from pathlib import Path

sys.path.append(str(Path(__file__).parent))

from bot.bot_service import bot_service

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–æ—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω–æ"""
    logger.info("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç
    bot_service.initialize()
    
    if not bot_service.is_enabled():
        logger.error("‚ùå –ë–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ config.yaml)")
        return
    
    try:
        # –¢–µ—Å—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å–≤–æ–¥–∫–∏
        await bot_service.send_daily_summary(15, 3)
        logger.info("‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
        
        # –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ª–æ—Ç–∞—Ö (—Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç)
        from core.models import Lot
        test_lot = Lot(
            id="test_001",
            name="–¢–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç",
            address="–ú–æ—Å–∫–≤–∞, –¢–≤–µ—Ä—Å–∫–∞—è, 1",
            area=100.0,
            price=5000000,
            annual_yield_percent=25.0
        )
        await bot_service.notify_new_lots([test_lot])
        logger.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–µ—Å—Ç–æ–≤–æ–º –ª–æ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
        logger.info("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –±–æ—Ç–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞: {e}")
        import traceback
        logger.error(traceback.format_exc())

if __name__ == "__main__":
    asyncio.run(test_bot())