#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Telegram –±–æ—Ç–∞ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
"""
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from core.config import CONFIG
from core.models import Lot, PropertyClassification
from bot.message_formatter import MessageFormatter
from uuid import uuid4
from datetime import datetime

def test_message_formatting():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç
    test_lot = Lot(
        id="123",
        name="–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ –Ω–∞ –¢–≤–µ—Ä—Å–∫–æ–π",
        address="–ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 1",
        coords=(55.7558, 37.6176),
        area=150.0,
        price=15000000,
        notice_number="–î–æ–∫—É–º–µ–Ω—Ç ‚Ññ12345",
        lot_number=1,
        auction_type="–ê—É–∫—Ü–∏–æ–Ω",
        sale_type="–ü—Ä–æ–¥–∞–∂–∞",
        law_reference="44-–§–ó",
        application_start=datetime.now(),
        application_end=datetime.now(),
        auction_start=datetime.now(),
        cadastral_number="77:01:0001234:567",
        property_category="–ù–µ–∂–∏–ª–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ",
        ownership_type="–°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
        auction_step=500000,
        deposit=1500000,
        recipient="–†–æ—Å–∏–º—É—â–µ—Å—Ç–≤–æ",
        recipient_inn="1234567890",
        recipient_kpp="123456789",
        bank_name="–°–±–µ—Ä–±–∞–Ω–∫",
        bank_bic="044525225",
        bank_account="40102810445370000022",
        correspondent_account="30101810400000000225",
        auction_url="https://torgi.gov.ru/test",
        uuid=uuid4(),
        district="–¢–≤–µ—Ä—Å–∫–æ–π —Ä–∞–π–æ–Ω"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    test_lot.market_price_per_sqm = 120000
    test_lot.current_price_per_sqm = 100000
    test_lot.market_value = 18000000
    test_lot.capitalization_rub = 1800000
    test_lot.capitalization_percent = 12.0
    test_lot.monthly_gap = 150000
    test_lot.annual_yield_percent = 12.0
    test_lot.market_deviation_percent = -16.7
    test_lot.classification = PropertyClassification(
        category="–°—Ç—Ä–∏—Ç-—Ä–∏—Ç–µ–π–ª",
        size_category="120-250 –º¬≤",
        has_basement=False,
        is_top_floor=False
    )
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    message = MessageFormatter.format_lot_analysis(test_lot)
    print("üìÑ –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ª–æ—Ç–µ:")
    print("=" * 50)
    print(message)
    print("=" * 50)
    
    return True

def test_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    bot_token = CONFIG.get('telegram_bot_token', '')
    enabled = CONFIG.get('telegram_notifications_enabled', False)
    
    print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã: {enabled}")
    print(f"{'‚úÖ' if bot_token else '‚ùå'} –¢–æ–∫–µ–Ω –±–æ—Ç–∞: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if bot_token else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    
    if not bot_token:
        print("‚ö†Ô∏è  –î–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ config.yaml")
        print("   telegram_bot_token: '–≤–∞—à_—Ç–æ–∫–µ–Ω_–æ—Ç_botfather'")
    
    return bool(bot_token)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("ü§ñ –¢–µ—Å—Ç Telegram –±–æ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_ok = test_config()
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    formatting_ok = test_message_formatting()
    print()
    
    if config_ok and formatting_ok:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")
        print("üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python3 run_bot.py")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")
    
    return config_ok and formatting_ok

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
