#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏
"""
import os
import json
import asyncio
from bot.bot_service import bot_service

def diagnose_subscribers():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–û–î–ü–ò–°–ß–ò–ö–û–í")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    subscribers_file = "bot_data/subscribers.json"
    print(f"üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞: {subscribers_file}")
    
    if os.path.exists(subscribers_file):
        print("‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        try:
            with open(subscribers_file, 'r') as f:
                subscribers_data = json.load(f)
            print(f"üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞: {subscribers_data}")
            print(f"üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ —Ñ–∞–π–ª–µ: {len(subscribers_data)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    else:
        print("‚ùå –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print(f"üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º: [764315256]")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–æ—Ç–∞
    print(f"\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞:")
    try:
        bot_service.initialize()
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        if hasattr(bot_service, 'bot'):
            print("‚úÖ –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω")
            
            if hasattr(bot_service.bot, 'subscribers'):
                subscribers = bot_service.bot.subscribers
                print(f"üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ –±–æ—Ç–µ: {len(subscribers)}")
                print(f"üìã –°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {list(subscribers)}")
                
                if len(subscribers) == 0:
                    print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
                    print("üí° –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ...")
                    return False  # –í–µ—Ä–Ω–µ–º False –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
                else:
                    print("‚úÖ –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                    return True
            else:
                print("‚ùå –£ –±–æ—Ç–∞ –Ω–µ—Ç –∞—Ç—Ä–∏–±—É—Ç–∞ subscribers")
        else:
            print("‚ùå –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    print(f"\nüìÇ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print(f"üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ bot_data/:")
    if os.path.exists("bot_data"):
        for file in os.listdir("bot_data"):
            print(f"   ‚Ä¢ {file}")
    else:
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è bot_data –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    return False

async def async_diagnose():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"""
    print("\nüîÑ –ê–°–ò–ù–•–†–û–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
    
    try:
        bot_service.initialize()
        
        if hasattr(bot_service, 'bot') and hasattr(bot_service.bot, '_load_subscribers'):
            print("üì• –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤...")
            await bot_service.bot._load_subscribers()
            
            subscribers = bot_service.bot.subscribers
            print(f"‚úÖ –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏: {len(subscribers)} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")
            print(f"üìã –°–ø–∏—Å–æ–∫: {list(subscribers)}")
            
            return len(subscribers) > 0
        else:
            print("‚ùå –ú–µ—Ç–æ–¥ _load_subscribers –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        return False

async def fix_subscribers():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏"""
    print("\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° –ü–û–î–ü–ò–°–ß–ò–ö–ê–ú–ò")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    os.makedirs("bot_data", exist_ok=True)
    
    # 2. –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    subscribers_file = "bot_data/subscribers.json"
    subscribers_data = [764315256]  # –í–∞—à chat_id
    
    with open(subscribers_file, 'w') as f:
        json.dump(subscribers_data, f)
    print(f"‚úÖ –§–∞–π–ª {subscribers_file} —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω")
    
    # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∑–∞–Ω–æ–≤–æ
    bot_service.initialize()
    
    # 4. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    if hasattr(bot_service, 'bot'):
        await bot_service.bot._load_subscribers()
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {len(bot_service.bot.subscribers)}")
        return len(bot_service.bot.subscribers) > 0
    
    return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –°–Ω–∞—á–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    sync_result = diagnose_subscribers()
    
    if not sync_result:
        # –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞, –ø—Ä–æ–±—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
        async_result = await async_diagnose()
        
        if not async_result:
            # –ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –ø—Ä–æ–±–ª–µ–º–∞, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
            print("\nüö® –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å...")
            fix_result = await fix_subscribers()
            
            if fix_result:
                print("\nüéâ –ü—Ä–æ–±–ª–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç.")
            else:
                print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        else:
            print("\n‚úÖ –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚úÖ –í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(main())